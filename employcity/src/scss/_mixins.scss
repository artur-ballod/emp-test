@mixin gapFallback($gap) {
    @supports not (aspect-ratio: 1 / 1) {
        margin-right: $gap;

        &:last-child {
            margin-right: 0;
        }
    }
}

@mixin gapFallbackV($gap) {
    @supports not (aspect-ratio: 1 / 1) {
        margin-bottom: $gap;

        &:last-child {
            margin-bottom: 0;
        }
    }
}

$units: 1px !default;
@mixin screen($res-first, $res-last: $res-first) {
    @if $res-first == $res-last {
        @media screen and (max-width: if(unitless($res-first), ($res-first - 1) *$units, $res-first)) {
            @content;
        }
    }
    @else if $res-first < $res-last {
        @media screen and (min-width: if(unitless($res-first), $res-first*$units, $res-first)) and (max-width: if(unitless($res-last), $res-last*$units, $res-last)) {
            @content;
        }
    }
}

@mixin min-screen($res) {
    @media screen and (min-width: if(unitless($res), $res*$units, $res)) {
        @content;
    }
}

@mixin flex-setting($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin font-setting($family, $size, $line-height, $font-width, $color) {
  font-family: $family;
  font-size: $size;
  line-height: $line-height;
  font-weight: $font-width;
  color: $color;
}